<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.playvideofromexpansionfile">

    <uses-permission android:name="android.permission.INTERNET" />

    <uses-permission android:name="com.android.vending.CHECK_LICENSE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!-- Required to keep CPU alive while downloading files
        (NOT to keep screen awake) -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- Required to poll the state of the network connection and respond to changes -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Required to check whether Wi-Fi is enabled -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".SampleDownloaderActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity">
        </activity>

        <!-- In order to start the service, it must be uniquely registered with
         the package manager here. -->
        <service android:name="com.example.playvideofromexpansionfile.SampleDownloaderService" />

        <!-- In order for the alarm manager to contact the downloader script, the receiver
         must be uniquely registered with the package manager here. -->
        <receiver android:name="com.example.playvideofromexpansionfile.SampleAlarmReceiver" />

        <!-- Providers must have a unique authority per application.
        Change the android:authorities line to something unique to your
        application (such as its package name) if you wish to use the
        provider.

        The format will be content://com.example.google.play.apkx/[zipfilepath]. -->
        <provider
            android:name="com.example.playvideofromexpansionfile.SampleZipFileProvider"
            android:authorities="${applicationId}"
            android:exported="false"
            android:multiprocess="true"/>

    </application>

</manifest>